# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_AttributesData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_AttributesData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_AttributesData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_AttributesData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_AttributesData
    def MaxHp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def Atk(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def Def(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def MagicResistance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_AttributesData
    def Cost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def BlockCnt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def MoveSpeed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_AttributesData
    def AttackSpeed(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_AttributesData
    def BaseAttackTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_AttributesData
    def RespawnTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def HpRecoveryPerSec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_AttributesData
    def SpRecoveryPerSec(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_AttributesData
    def MaxDeployCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def MaxDeckStackCnt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def TauntLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def MassLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def BaseForceLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_AttributesData
    def StunImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_AttributesData
    def SilenceImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_AttributesData
    def SleepImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_AttributesData
    def FrozenImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_AttributesData
    def LevitateImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_AttributesData
    def DisarmedCombatImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_AttributesData
    def FearedImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_AttributesData
    def PalsyImmune(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def clz_Torappu_AttributesDataStart(builder):
    builder.StartObject(25)

def Start(builder):
    clz_Torappu_AttributesDataStart(builder)

def clz_Torappu_AttributesDataAddMaxHp(builder, maxHp):
    builder.PrependInt32Slot(0, maxHp, 0)

def AddMaxHp(builder, maxHp):
    clz_Torappu_AttributesDataAddMaxHp(builder, maxHp)

def clz_Torappu_AttributesDataAddAtk(builder, atk):
    builder.PrependInt32Slot(1, atk, 0)

def AddAtk(builder, atk):
    clz_Torappu_AttributesDataAddAtk(builder, atk)

def clz_Torappu_AttributesDataAddDef(builder, def_):
    builder.PrependInt32Slot(2, def_, 0)

def AddDef(builder, def_):
    clz_Torappu_AttributesDataAddDef(builder, def_)

def clz_Torappu_AttributesDataAddMagicResistance(builder, magicResistance):
    builder.PrependFloat32Slot(3, magicResistance, 0.0)

def AddMagicResistance(builder, magicResistance):
    clz_Torappu_AttributesDataAddMagicResistance(builder, magicResistance)

def clz_Torappu_AttributesDataAddCost(builder, cost):
    builder.PrependInt32Slot(4, cost, 0)

def AddCost(builder, cost):
    clz_Torappu_AttributesDataAddCost(builder, cost)

def clz_Torappu_AttributesDataAddBlockCnt(builder, blockCnt):
    builder.PrependInt32Slot(5, blockCnt, 0)

def AddBlockCnt(builder, blockCnt):
    clz_Torappu_AttributesDataAddBlockCnt(builder, blockCnt)

def clz_Torappu_AttributesDataAddMoveSpeed(builder, moveSpeed):
    builder.PrependFloat32Slot(6, moveSpeed, 0.0)

def AddMoveSpeed(builder, moveSpeed):
    clz_Torappu_AttributesDataAddMoveSpeed(builder, moveSpeed)

def clz_Torappu_AttributesDataAddAttackSpeed(builder, attackSpeed):
    builder.PrependFloat32Slot(7, attackSpeed, 0.0)

def AddAttackSpeed(builder, attackSpeed):
    clz_Torappu_AttributesDataAddAttackSpeed(builder, attackSpeed)

def clz_Torappu_AttributesDataAddBaseAttackTime(builder, baseAttackTime):
    builder.PrependFloat32Slot(8, baseAttackTime, 0.0)

def AddBaseAttackTime(builder, baseAttackTime):
    clz_Torappu_AttributesDataAddBaseAttackTime(builder, baseAttackTime)

def clz_Torappu_AttributesDataAddRespawnTime(builder, respawnTime):
    builder.PrependInt32Slot(9, respawnTime, 0)

def AddRespawnTime(builder, respawnTime):
    clz_Torappu_AttributesDataAddRespawnTime(builder, respawnTime)

def clz_Torappu_AttributesDataAddHpRecoveryPerSec(builder, hpRecoveryPerSec):
    builder.PrependFloat32Slot(10, hpRecoveryPerSec, 0.0)

def AddHpRecoveryPerSec(builder, hpRecoveryPerSec):
    clz_Torappu_AttributesDataAddHpRecoveryPerSec(builder, hpRecoveryPerSec)

def clz_Torappu_AttributesDataAddSpRecoveryPerSec(builder, spRecoveryPerSec):
    builder.PrependFloat32Slot(11, spRecoveryPerSec, 0.0)

def AddSpRecoveryPerSec(builder, spRecoveryPerSec):
    clz_Torappu_AttributesDataAddSpRecoveryPerSec(builder, spRecoveryPerSec)

def clz_Torappu_AttributesDataAddMaxDeployCount(builder, maxDeployCount):
    builder.PrependInt32Slot(12, maxDeployCount, 0)

def AddMaxDeployCount(builder, maxDeployCount):
    clz_Torappu_AttributesDataAddMaxDeployCount(builder, maxDeployCount)

def clz_Torappu_AttributesDataAddMaxDeckStackCnt(builder, maxDeckStackCnt):
    builder.PrependInt32Slot(13, maxDeckStackCnt, 0)

def AddMaxDeckStackCnt(builder, maxDeckStackCnt):
    clz_Torappu_AttributesDataAddMaxDeckStackCnt(builder, maxDeckStackCnt)

def clz_Torappu_AttributesDataAddTauntLevel(builder, tauntLevel):
    builder.PrependInt32Slot(14, tauntLevel, 0)

def AddTauntLevel(builder, tauntLevel):
    clz_Torappu_AttributesDataAddTauntLevel(builder, tauntLevel)

def clz_Torappu_AttributesDataAddMassLevel(builder, massLevel):
    builder.PrependInt32Slot(15, massLevel, 0)

def AddMassLevel(builder, massLevel):
    clz_Torappu_AttributesDataAddMassLevel(builder, massLevel)

def clz_Torappu_AttributesDataAddBaseForceLevel(builder, baseForceLevel):
    builder.PrependInt32Slot(16, baseForceLevel, 0)

def AddBaseForceLevel(builder, baseForceLevel):
    clz_Torappu_AttributesDataAddBaseForceLevel(builder, baseForceLevel)

def clz_Torappu_AttributesDataAddStunImmune(builder, stunImmune):
    builder.PrependBoolSlot(17, stunImmune, 0)

def AddStunImmune(builder, stunImmune):
    clz_Torappu_AttributesDataAddStunImmune(builder, stunImmune)

def clz_Torappu_AttributesDataAddSilenceImmune(builder, silenceImmune):
    builder.PrependBoolSlot(18, silenceImmune, 0)

def AddSilenceImmune(builder, silenceImmune):
    clz_Torappu_AttributesDataAddSilenceImmune(builder, silenceImmune)

def clz_Torappu_AttributesDataAddSleepImmune(builder, sleepImmune):
    builder.PrependBoolSlot(19, sleepImmune, 0)

def AddSleepImmune(builder, sleepImmune):
    clz_Torappu_AttributesDataAddSleepImmune(builder, sleepImmune)

def clz_Torappu_AttributesDataAddFrozenImmune(builder, frozenImmune):
    builder.PrependBoolSlot(20, frozenImmune, 0)

def AddFrozenImmune(builder, frozenImmune):
    clz_Torappu_AttributesDataAddFrozenImmune(builder, frozenImmune)

def clz_Torappu_AttributesDataAddLevitateImmune(builder, levitateImmune):
    builder.PrependBoolSlot(21, levitateImmune, 0)

def AddLevitateImmune(builder, levitateImmune):
    clz_Torappu_AttributesDataAddLevitateImmune(builder, levitateImmune)

def clz_Torappu_AttributesDataAddDisarmedCombatImmune(builder, disarmedCombatImmune):
    builder.PrependBoolSlot(22, disarmedCombatImmune, 0)

def AddDisarmedCombatImmune(builder, disarmedCombatImmune):
    clz_Torappu_AttributesDataAddDisarmedCombatImmune(builder, disarmedCombatImmune)

def clz_Torappu_AttributesDataAddFearedImmune(builder, fearedImmune):
    builder.PrependBoolSlot(23, fearedImmune, 0)

def AddFearedImmune(builder, fearedImmune):
    clz_Torappu_AttributesDataAddFearedImmune(builder, fearedImmune)

def clz_Torappu_AttributesDataAddPalsyImmune(builder, palsyImmune):
    builder.PrependBoolSlot(24, palsyImmune, 0)

def AddPalsyImmune(builder, palsyImmune):
    clz_Torappu_AttributesDataAddPalsyImmune(builder, palsyImmune)

def clz_Torappu_AttributesDataEnd(builder):
    return builder.EndObject()

def End(builder):
    return clz_Torappu_AttributesDataEnd(builder)


class clz_Torappu_AttributesDataT(object):

    # clz_Torappu_AttributesDataT
    def __init__(self):
        self.maxHp = 0  # type: int
        self.atk = 0  # type: int
        self.def_ = 0  # type: int
        self.magicResistance = 0.0  # type: float
        self.cost = 0  # type: int
        self.blockCnt = 0  # type: int
        self.moveSpeed = 0.0  # type: float
        self.attackSpeed = 0.0  # type: float
        self.baseAttackTime = 0.0  # type: float
        self.respawnTime = 0  # type: int
        self.hpRecoveryPerSec = 0.0  # type: float
        self.spRecoveryPerSec = 0.0  # type: float
        self.maxDeployCount = 0  # type: int
        self.maxDeckStackCnt = 0  # type: int
        self.tauntLevel = 0  # type: int
        self.massLevel = 0  # type: int
        self.baseForceLevel = 0  # type: int
        self.stunImmune = False  # type: bool
        self.silenceImmune = False  # type: bool
        self.sleepImmune = False  # type: bool
        self.frozenImmune = False  # type: bool
        self.levitateImmune = False  # type: bool
        self.disarmedCombatImmune = False  # type: bool
        self.fearedImmune = False  # type: bool
        self.palsyImmune = False  # type: bool

    @classmethod
    def InitFromBuf(cls, buf, pos):
        clzTorappuAttributesData = clz_Torappu_AttributesData()
        clzTorappuAttributesData.Init(buf, pos)
        return cls.InitFromObj(clzTorappuAttributesData)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, clzTorappuAttributesData):
        x = clz_Torappu_AttributesDataT()
        x._UnPack(clzTorappuAttributesData)
        return x

    # clz_Torappu_AttributesDataT
    def _UnPack(self, clzTorappuAttributesData):
        if clzTorappuAttributesData is None:
            return
        self.maxHp = clzTorappuAttributesData.MaxHp()
        self.atk = clzTorappuAttributesData.Atk()
        self.def_ = clzTorappuAttributesData.Def()
        self.magicResistance = clzTorappuAttributesData.MagicResistance()
        self.cost = clzTorappuAttributesData.Cost()
        self.blockCnt = clzTorappuAttributesData.BlockCnt()
        self.moveSpeed = clzTorappuAttributesData.MoveSpeed()
        self.attackSpeed = clzTorappuAttributesData.AttackSpeed()
        self.baseAttackTime = clzTorappuAttributesData.BaseAttackTime()
        self.respawnTime = clzTorappuAttributesData.RespawnTime()
        self.hpRecoveryPerSec = clzTorappuAttributesData.HpRecoveryPerSec()
        self.spRecoveryPerSec = clzTorappuAttributesData.SpRecoveryPerSec()
        self.maxDeployCount = clzTorappuAttributesData.MaxDeployCount()
        self.maxDeckStackCnt = clzTorappuAttributesData.MaxDeckStackCnt()
        self.tauntLevel = clzTorappuAttributesData.TauntLevel()
        self.massLevel = clzTorappuAttributesData.MassLevel()
        self.baseForceLevel = clzTorappuAttributesData.BaseForceLevel()
        self.stunImmune = clzTorappuAttributesData.StunImmune()
        self.silenceImmune = clzTorappuAttributesData.SilenceImmune()
        self.sleepImmune = clzTorappuAttributesData.SleepImmune()
        self.frozenImmune = clzTorappuAttributesData.FrozenImmune()
        self.levitateImmune = clzTorappuAttributesData.LevitateImmune()
        self.disarmedCombatImmune = clzTorappuAttributesData.DisarmedCombatImmune()
        self.fearedImmune = clzTorappuAttributesData.FearedImmune()
        self.palsyImmune = clzTorappuAttributesData.PalsyImmune()

    # clz_Torappu_AttributesDataT
    def Pack(self, builder):
        clz_Torappu_AttributesDataStart(builder)
        clz_Torappu_AttributesDataAddMaxHp(builder, self.maxHp)
        clz_Torappu_AttributesDataAddAtk(builder, self.atk)
        clz_Torappu_AttributesDataAddDef(builder, self.def_)
        clz_Torappu_AttributesDataAddMagicResistance(builder, self.magicResistance)
        clz_Torappu_AttributesDataAddCost(builder, self.cost)
        clz_Torappu_AttributesDataAddBlockCnt(builder, self.blockCnt)
        clz_Torappu_AttributesDataAddMoveSpeed(builder, self.moveSpeed)
        clz_Torappu_AttributesDataAddAttackSpeed(builder, self.attackSpeed)
        clz_Torappu_AttributesDataAddBaseAttackTime(builder, self.baseAttackTime)
        clz_Torappu_AttributesDataAddRespawnTime(builder, self.respawnTime)
        clz_Torappu_AttributesDataAddHpRecoveryPerSec(builder, self.hpRecoveryPerSec)
        clz_Torappu_AttributesDataAddSpRecoveryPerSec(builder, self.spRecoveryPerSec)
        clz_Torappu_AttributesDataAddMaxDeployCount(builder, self.maxDeployCount)
        clz_Torappu_AttributesDataAddMaxDeckStackCnt(builder, self.maxDeckStackCnt)
        clz_Torappu_AttributesDataAddTauntLevel(builder, self.tauntLevel)
        clz_Torappu_AttributesDataAddMassLevel(builder, self.massLevel)
        clz_Torappu_AttributesDataAddBaseForceLevel(builder, self.baseForceLevel)
        clz_Torappu_AttributesDataAddStunImmune(builder, self.stunImmune)
        clz_Torappu_AttributesDataAddSilenceImmune(builder, self.silenceImmune)
        clz_Torappu_AttributesDataAddSleepImmune(builder, self.sleepImmune)
        clz_Torappu_AttributesDataAddFrozenImmune(builder, self.frozenImmune)
        clz_Torappu_AttributesDataAddLevitateImmune(builder, self.levitateImmune)
        clz_Torappu_AttributesDataAddDisarmedCombatImmune(builder, self.disarmedCombatImmune)
        clz_Torappu_AttributesDataAddFearedImmune(builder, self.fearedImmune)
        clz_Torappu_AttributesDataAddPalsyImmune(builder, self.palsyImmune)
        clzTorappuAttributesData = clz_Torappu_AttributesDataEnd(builder)
        return clzTorappuAttributesData
