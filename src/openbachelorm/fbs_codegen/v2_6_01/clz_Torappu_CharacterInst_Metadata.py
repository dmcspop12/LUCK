# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_CharacterInst_Metadata(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_CharacterInst_Metadata()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_CharacterInst_Metadata(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_CharacterInst_Metadata
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_CharacterInst_Metadata
    def CharacterKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_CharacterInst_Metadata
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_CharacterInst_Metadata
    def Phase(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_CharacterInst_Metadata
    def FavorPoint(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_CharacterInst_Metadata
    def PotentialRank(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_CharacterInst_MetadataStart(builder):
    builder.StartObject(5)

def Start(builder):
    clz_Torappu_CharacterInst_MetadataStart(builder)

def clz_Torappu_CharacterInst_MetadataAddCharacterKey(builder, characterKey):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(characterKey), 0)

def AddCharacterKey(builder, characterKey):
    clz_Torappu_CharacterInst_MetadataAddCharacterKey(builder, characterKey)

def clz_Torappu_CharacterInst_MetadataAddLevel(builder, level):
    builder.PrependInt32Slot(1, level, 0)

def AddLevel(builder, level):
    clz_Torappu_CharacterInst_MetadataAddLevel(builder, level)

def clz_Torappu_CharacterInst_MetadataAddPhase(builder, phase):
    builder.PrependInt32Slot(2, phase, 0)

def AddPhase(builder, phase):
    clz_Torappu_CharacterInst_MetadataAddPhase(builder, phase)

def clz_Torappu_CharacterInst_MetadataAddFavorPoint(builder, favorPoint):
    builder.PrependInt32Slot(3, favorPoint, 0)

def AddFavorPoint(builder, favorPoint):
    clz_Torappu_CharacterInst_MetadataAddFavorPoint(builder, favorPoint)

def clz_Torappu_CharacterInst_MetadataAddPotentialRank(builder, potentialRank):
    builder.PrependInt32Slot(4, potentialRank, 0)

def AddPotentialRank(builder, potentialRank):
    clz_Torappu_CharacterInst_MetadataAddPotentialRank(builder, potentialRank)

def clz_Torappu_CharacterInst_MetadataEnd(builder):
    return builder.EndObject()

def End(builder):
    return clz_Torappu_CharacterInst_MetadataEnd(builder)


class clz_Torappu_CharacterInst_MetadataT(object):

    # clz_Torappu_CharacterInst_MetadataT
    def __init__(self):
        self.characterKey = None  # type: str
        self.level = 0  # type: int
        self.phase = 0  # type: int
        self.favorPoint = 0  # type: int
        self.potentialRank = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        clzTorappuCharacterInstMetadata = clz_Torappu_CharacterInst_Metadata()
        clzTorappuCharacterInstMetadata.Init(buf, pos)
        return cls.InitFromObj(clzTorappuCharacterInstMetadata)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, clzTorappuCharacterInstMetadata):
        x = clz_Torappu_CharacterInst_MetadataT()
        x._UnPack(clzTorappuCharacterInstMetadata)
        return x

    # clz_Torappu_CharacterInst_MetadataT
    def _UnPack(self, clzTorappuCharacterInstMetadata):
        if clzTorappuCharacterInstMetadata is None:
            return
        self.characterKey = clzTorappuCharacterInstMetadata.CharacterKey()
        self.level = clzTorappuCharacterInstMetadata.Level()
        self.phase = clzTorappuCharacterInstMetadata.Phase()
        self.favorPoint = clzTorappuCharacterInstMetadata.FavorPoint()
        self.potentialRank = clzTorappuCharacterInstMetadata.PotentialRank()

    # clz_Torappu_CharacterInst_MetadataT
    def Pack(self, builder):
        if self.characterKey is not None:
            characterKey = builder.CreateString(self.characterKey)
        clz_Torappu_CharacterInst_MetadataStart(builder)
        if self.characterKey is not None:
            clz_Torappu_CharacterInst_MetadataAddCharacterKey(builder, characterKey)
        clz_Torappu_CharacterInst_MetadataAddLevel(builder, self.level)
        clz_Torappu_CharacterInst_MetadataAddPhase(builder, self.phase)
        clz_Torappu_CharacterInst_MetadataAddFavorPoint(builder, self.favorPoint)
        clz_Torappu_CharacterInst_MetadataAddPotentialRank(builder, self.potentialRank)
        clzTorappuCharacterInstMetadata = clz_Torappu_CharacterInst_MetadataEnd(builder)
        return clzTorappuCharacterInstMetadata
