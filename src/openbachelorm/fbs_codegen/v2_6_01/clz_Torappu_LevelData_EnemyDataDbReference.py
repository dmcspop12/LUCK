# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_LevelData_EnemyDataDbReference(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_LevelData_EnemyDataDbReference()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_LevelData_EnemyDataDbReference(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_LevelData_EnemyDataDbReference
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_LevelData_EnemyDataDbReference
    def UseDb(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_LevelData_EnemyDataDbReference
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_LevelData_EnemyDataDbReference
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyDataDbReference
    def OverwrittenData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_EnemyDatabase_EnemyData import clz_Torappu_EnemyDatabase_EnemyData
            obj = clz_Torappu_EnemyDatabase_EnemyData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_LevelData_EnemyDataDbReferenceStart(builder):
    builder.StartObject(4)

def Start(builder):
    clz_Torappu_LevelData_EnemyDataDbReferenceStart(builder)

def clz_Torappu_LevelData_EnemyDataDbReferenceAddUseDb(builder, useDb):
    builder.PrependBoolSlot(0, useDb, 0)

def AddUseDb(builder, useDb):
    clz_Torappu_LevelData_EnemyDataDbReferenceAddUseDb(builder, useDb)

def clz_Torappu_LevelData_EnemyDataDbReferenceAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    clz_Torappu_LevelData_EnemyDataDbReferenceAddId(builder, id)

def clz_Torappu_LevelData_EnemyDataDbReferenceAddLevel(builder, level):
    builder.PrependInt32Slot(2, level, 0)

def AddLevel(builder, level):
    clz_Torappu_LevelData_EnemyDataDbReferenceAddLevel(builder, level)

def clz_Torappu_LevelData_EnemyDataDbReferenceAddOverwrittenData(builder, overwrittenData):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(overwrittenData), 0)

def AddOverwrittenData(builder, overwrittenData):
    clz_Torappu_LevelData_EnemyDataDbReferenceAddOverwrittenData(builder, overwrittenData)

def clz_Torappu_LevelData_EnemyDataDbReferenceEnd(builder):
    return builder.EndObject()

def End(builder):
    return clz_Torappu_LevelData_EnemyDataDbReferenceEnd(builder)

import clz_Torappu_EnemyDatabase_EnemyData
try:
    from typing import Optional
except:
    pass

class clz_Torappu_LevelData_EnemyDataDbReferenceT(object):

    # clz_Torappu_LevelData_EnemyDataDbReferenceT
    def __init__(self):
        self.useDb = False  # type: bool
        self.id = None  # type: str
        self.level = 0  # type: int
        self.overwrittenData = None  # type: Optional[clz_Torappu_EnemyDatabase_EnemyData.clz_Torappu_EnemyDatabase_EnemyDataT]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        clzTorappuLevelDataEnemyDataDbReference = clz_Torappu_LevelData_EnemyDataDbReference()
        clzTorappuLevelDataEnemyDataDbReference.Init(buf, pos)
        return cls.InitFromObj(clzTorappuLevelDataEnemyDataDbReference)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, clzTorappuLevelDataEnemyDataDbReference):
        x = clz_Torappu_LevelData_EnemyDataDbReferenceT()
        x._UnPack(clzTorappuLevelDataEnemyDataDbReference)
        return x

    # clz_Torappu_LevelData_EnemyDataDbReferenceT
    def _UnPack(self, clzTorappuLevelDataEnemyDataDbReference):
        if clzTorappuLevelDataEnemyDataDbReference is None:
            return
        self.useDb = clzTorappuLevelDataEnemyDataDbReference.UseDb()
        self.id = clzTorappuLevelDataEnemyDataDbReference.Id()
        self.level = clzTorappuLevelDataEnemyDataDbReference.Level()
        if clzTorappuLevelDataEnemyDataDbReference.OverwrittenData() is not None:
            self.overwrittenData = clz_Torappu_EnemyDatabase_EnemyData.clz_Torappu_EnemyDatabase_EnemyDataT.InitFromObj(clzTorappuLevelDataEnemyDataDbReference.OverwrittenData())

    # clz_Torappu_LevelData_EnemyDataDbReferenceT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.overwrittenData is not None:
            overwrittenData = self.overwrittenData.Pack(builder)
        clz_Torappu_LevelData_EnemyDataDbReferenceStart(builder)
        clz_Torappu_LevelData_EnemyDataDbReferenceAddUseDb(builder, self.useDb)
        if self.id is not None:
            clz_Torappu_LevelData_EnemyDataDbReferenceAddId(builder, id)
        clz_Torappu_LevelData_EnemyDataDbReferenceAddLevel(builder, self.level)
        if self.overwrittenData is not None:
            clz_Torappu_LevelData_EnemyDataDbReferenceAddOverwrittenData(builder, overwrittenData)
        clzTorappuLevelDataEnemyDataDbReference = clz_Torappu_LevelData_EnemyDataDbReferenceEnd(builder)
        return clzTorappuLevelDataEnemyDataDbReference
