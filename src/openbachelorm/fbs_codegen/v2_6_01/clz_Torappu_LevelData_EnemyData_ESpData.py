# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_LevelData_EnemyData_ESpData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_LevelData_EnemyData_ESpData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_LevelData_EnemyData_ESpData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_LevelData_EnemyData_ESpData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_LevelData_EnemyData_ESpData
    def SpType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESpData
    def MaxSp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESpData
    def InitSp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # clz_Torappu_LevelData_EnemyData_ESpData
    def Increment(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def clz_Torappu_LevelData_EnemyData_ESpDataStart(builder):
    builder.StartObject(4)

def Start(builder):
    clz_Torappu_LevelData_EnemyData_ESpDataStart(builder)

def clz_Torappu_LevelData_EnemyData_ESpDataAddSpType(builder, spType):
    builder.PrependInt32Slot(0, spType, 0)

def AddSpType(builder, spType):
    clz_Torappu_LevelData_EnemyData_ESpDataAddSpType(builder, spType)

def clz_Torappu_LevelData_EnemyData_ESpDataAddMaxSp(builder, maxSp):
    builder.PrependInt32Slot(1, maxSp, 0)

def AddMaxSp(builder, maxSp):
    clz_Torappu_LevelData_EnemyData_ESpDataAddMaxSp(builder, maxSp)

def clz_Torappu_LevelData_EnemyData_ESpDataAddInitSp(builder, initSp):
    builder.PrependInt32Slot(2, initSp, 0)

def AddInitSp(builder, initSp):
    clz_Torappu_LevelData_EnemyData_ESpDataAddInitSp(builder, initSp)

def clz_Torappu_LevelData_EnemyData_ESpDataAddIncrement(builder, increment):
    builder.PrependFloat32Slot(3, increment, 0.0)

def AddIncrement(builder, increment):
    clz_Torappu_LevelData_EnemyData_ESpDataAddIncrement(builder, increment)

def clz_Torappu_LevelData_EnemyData_ESpDataEnd(builder):
    return builder.EndObject()

def End(builder):
    return clz_Torappu_LevelData_EnemyData_ESpDataEnd(builder)


class clz_Torappu_LevelData_EnemyData_ESpDataT(object):

    # clz_Torappu_LevelData_EnemyData_ESpDataT
    def __init__(self):
        self.spType = 0  # type: int
        self.maxSp = 0  # type: int
        self.initSp = 0  # type: int
        self.increment = 0.0  # type: float

    @classmethod
    def InitFromBuf(cls, buf, pos):
        clzTorappuLevelDataEnemyDataEspData = clz_Torappu_LevelData_EnemyData_ESpData()
        clzTorappuLevelDataEnemyDataEspData.Init(buf, pos)
        return cls.InitFromObj(clzTorappuLevelDataEnemyDataEspData)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, clzTorappuLevelDataEnemyDataEspData):
        x = clz_Torappu_LevelData_EnemyData_ESpDataT()
        x._UnPack(clzTorappuLevelDataEnemyDataEspData)
        return x

    # clz_Torappu_LevelData_EnemyData_ESpDataT
    def _UnPack(self, clzTorappuLevelDataEnemyDataEspData):
        if clzTorappuLevelDataEnemyDataEspData is None:
            return
        self.spType = clzTorappuLevelDataEnemyDataEspData.SpType()
        self.maxSp = clzTorappuLevelDataEnemyDataEspData.MaxSp()
        self.initSp = clzTorappuLevelDataEnemyDataEspData.InitSp()
        self.increment = clzTorappuLevelDataEnemyDataEspData.Increment()

    # clz_Torappu_LevelData_EnemyData_ESpDataT
    def Pack(self, builder):
        clz_Torappu_LevelData_EnemyData_ESpDataStart(builder)
        clz_Torappu_LevelData_EnemyData_ESpDataAddSpType(builder, self.spType)
        clz_Torappu_LevelData_EnemyData_ESpDataAddMaxSp(builder, self.maxSp)
        clz_Torappu_LevelData_EnemyData_ESpDataAddInitSp(builder, self.initSp)
        clz_Torappu_LevelData_EnemyData_ESpDataAddIncrement(builder, self.increment)
        clzTorappuLevelDataEnemyDataEspData = clz_Torappu_LevelData_EnemyData_ESpDataEnd(builder)
        return clzTorappuLevelDataEnemyDataEspData
