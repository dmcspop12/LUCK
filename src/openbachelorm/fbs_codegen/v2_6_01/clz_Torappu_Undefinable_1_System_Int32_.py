# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_Undefinable_1_System_Int32_(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Undefinable_1_System_Int32_()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Undefinable_1_System_Int32_(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Undefinable_1_System_Int32_
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Undefinable_1_System_Int32_
    def MDefined(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # clz_Torappu_Undefinable_1_System_Int32_
    def MValue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_Undefinable_1_System_Int32_Start(builder):
    builder.StartObject(2)

def Start(builder):
    clz_Torappu_Undefinable_1_System_Int32_Start(builder)

def clz_Torappu_Undefinable_1_System_Int32_AddMDefined(builder, mDefined):
    builder.PrependBoolSlot(0, mDefined, 0)

def AddMDefined(builder, mDefined):
    clz_Torappu_Undefinable_1_System_Int32_AddMDefined(builder, mDefined)

def clz_Torappu_Undefinable_1_System_Int32_AddMValue(builder, mValue):
    builder.PrependInt32Slot(1, mValue, 0)

def AddMValue(builder, mValue):
    clz_Torappu_Undefinable_1_System_Int32_AddMValue(builder, mValue)

def clz_Torappu_Undefinable_1_System_Int32_End(builder):
    return builder.EndObject()

def End(builder):
    return clz_Torappu_Undefinable_1_System_Int32_End(builder)


class clz_Torappu_Undefinable_1_System_Int32_T(object):

    # clz_Torappu_Undefinable_1_System_Int32_T
    def __init__(self):
        self.mDefined = False  # type: bool
        self.mValue = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        clzTorappuUndefinable1SystemInt32_ = clz_Torappu_Undefinable_1_System_Int32_()
        clzTorappuUndefinable1SystemInt32_.Init(buf, pos)
        return cls.InitFromObj(clzTorappuUndefinable1SystemInt32_)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, clzTorappuUndefinable1SystemInt32_):
        x = clz_Torappu_Undefinable_1_System_Int32_T()
        x._UnPack(clzTorappuUndefinable1SystemInt32_)
        return x

    # clz_Torappu_Undefinable_1_System_Int32_T
    def _UnPack(self, clzTorappuUndefinable1SystemInt32_):
        if clzTorappuUndefinable1SystemInt32_ is None:
            return
        self.mDefined = clzTorappuUndefinable1SystemInt32_.MDefined()
        self.mValue = clzTorappuUndefinable1SystemInt32_.MValue()

    # clz_Torappu_Undefinable_1_System_Int32_T
    def Pack(self, builder):
        clz_Torappu_Undefinable_1_System_Int32_Start(builder)
        clz_Torappu_Undefinable_1_System_Int32_AddMDefined(builder, self.mDefined)
        clz_Torappu_Undefinable_1_System_Int32_AddMValue(builder, self.mValue)
        clzTorappuUndefinable1SystemInt32_ = clz_Torappu_Undefinable_1_System_Int32_End(builder)
        return clzTorappuUndefinable1SystemInt32_
