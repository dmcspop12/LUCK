# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_Blackboard_DataPair(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_Blackboard_DataPair()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_Blackboard_DataPair(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_Blackboard_DataPair
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_Blackboard_DataPair
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_Blackboard_DataPair
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # clz_Torappu_Blackboard_DataPair
    def ValueStr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def clz_Torappu_Blackboard_DataPairStart(builder):
    builder.StartObject(3)

def Start(builder):
    clz_Torappu_Blackboard_DataPairStart(builder)

def clz_Torappu_Blackboard_DataPairAddKey(builder, key):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)

def AddKey(builder, key):
    clz_Torappu_Blackboard_DataPairAddKey(builder, key)

def clz_Torappu_Blackboard_DataPairAddValue(builder, value):
    builder.PrependFloat32Slot(1, value, 0.0)

def AddValue(builder, value):
    clz_Torappu_Blackboard_DataPairAddValue(builder, value)

def clz_Torappu_Blackboard_DataPairAddValueStr(builder, valueStr):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(valueStr), 0)

def AddValueStr(builder, valueStr):
    clz_Torappu_Blackboard_DataPairAddValueStr(builder, valueStr)

def clz_Torappu_Blackboard_DataPairEnd(builder):
    return builder.EndObject()

def End(builder):
    return clz_Torappu_Blackboard_DataPairEnd(builder)


class clz_Torappu_Blackboard_DataPairT(object):

    # clz_Torappu_Blackboard_DataPairT
    def __init__(self):
        self.key = None  # type: str
        self.value = 0.0  # type: float
        self.valueStr = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        clzTorappuBlackboardDataPair = clz_Torappu_Blackboard_DataPair()
        clzTorappuBlackboardDataPair.Init(buf, pos)
        return cls.InitFromObj(clzTorappuBlackboardDataPair)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, clzTorappuBlackboardDataPair):
        x = clz_Torappu_Blackboard_DataPairT()
        x._UnPack(clzTorappuBlackboardDataPair)
        return x

    # clz_Torappu_Blackboard_DataPairT
    def _UnPack(self, clzTorappuBlackboardDataPair):
        if clzTorappuBlackboardDataPair is None:
            return
        self.key = clzTorappuBlackboardDataPair.Key()
        self.value = clzTorappuBlackboardDataPair.Value()
        self.valueStr = clzTorappuBlackboardDataPair.ValueStr()

    # clz_Torappu_Blackboard_DataPairT
    def Pack(self, builder):
        if self.key is not None:
            key = builder.CreateString(self.key)
        if self.valueStr is not None:
            valueStr = builder.CreateString(self.valueStr)
        clz_Torappu_Blackboard_DataPairStart(builder)
        if self.key is not None:
            clz_Torappu_Blackboard_DataPairAddKey(builder, key)
        clz_Torappu_Blackboard_DataPairAddValue(builder, self.value)
        if self.valueStr is not None:
            clz_Torappu_Blackboard_DataPairAddValueStr(builder, valueStr)
        clzTorappuBlackboardDataPair = clz_Torappu_Blackboard_DataPairEnd(builder)
        return clzTorappuBlackboardDataPair
