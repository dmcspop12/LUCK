# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_CharacterData_MasterInfo(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_CharacterData_MasterInfo()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_CharacterData_MasterInfo(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_CharacterData_MasterInfo
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_CharacterData_MasterInfo
    def MasterId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # clz_Torappu_CharacterData_MasterInfo
    def Level(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def clz_Torappu_CharacterData_MasterInfoStart(builder):
    builder.StartObject(2)

def Start(builder):
    clz_Torappu_CharacterData_MasterInfoStart(builder)

def clz_Torappu_CharacterData_MasterInfoAddMasterId(builder, masterId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(masterId), 0)

def AddMasterId(builder, masterId):
    clz_Torappu_CharacterData_MasterInfoAddMasterId(builder, masterId)

def clz_Torappu_CharacterData_MasterInfoAddLevel(builder, level):
    builder.PrependInt32Slot(1, level, 0)

def AddLevel(builder, level):
    clz_Torappu_CharacterData_MasterInfoAddLevel(builder, level)

def clz_Torappu_CharacterData_MasterInfoEnd(builder):
    return builder.EndObject()

def End(builder):
    return clz_Torappu_CharacterData_MasterInfoEnd(builder)


class clz_Torappu_CharacterData_MasterInfoT(object):

    # clz_Torappu_CharacterData_MasterInfoT
    def __init__(self):
        self.masterId = None  # type: str
        self.level = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        clzTorappuCharacterDataMasterInfo = clz_Torappu_CharacterData_MasterInfo()
        clzTorappuCharacterDataMasterInfo.Init(buf, pos)
        return cls.InitFromObj(clzTorappuCharacterDataMasterInfo)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, clzTorappuCharacterDataMasterInfo):
        x = clz_Torappu_CharacterData_MasterInfoT()
        x._UnPack(clzTorappuCharacterDataMasterInfo)
        return x

    # clz_Torappu_CharacterData_MasterInfoT
    def _UnPack(self, clzTorappuCharacterDataMasterInfo):
        if clzTorappuCharacterDataMasterInfo is None:
            return
        self.masterId = clzTorappuCharacterDataMasterInfo.MasterId()
        self.level = clzTorappuCharacterDataMasterInfo.Level()

    # clz_Torappu_CharacterData_MasterInfoT
    def Pack(self, builder):
        if self.masterId is not None:
            masterId = builder.CreateString(self.masterId)
        clz_Torappu_CharacterData_MasterInfoStart(builder)
        if self.masterId is not None:
            clz_Torappu_CharacterData_MasterInfoAddMasterId(builder, masterId)
        clz_Torappu_CharacterData_MasterInfoAddLevel(builder, self.level)
        clzTorappuCharacterDataMasterInfo = clz_Torappu_CharacterData_MasterInfoEnd(builder)
        return clzTorappuCharacterDataMasterInfo
