# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class clz_Torappu_EnemyDatabase_EnemyData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = clz_Torappu_EnemyDatabase_EnemyData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsclz_Torappu_EnemyDatabase_EnemyData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # clz_Torappu_EnemyDatabase_EnemyData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # clz_Torappu_EnemyDatabase_EnemyData
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_String_ import clz_Torappu_Undefinable_1_System_String_
            obj = clz_Torappu_Undefinable_1_System_String_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_String_ import clz_Torappu_Undefinable_1_System_String_
            obj = clz_Torappu_Undefinable_1_System_String_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def PrefabKey(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_String_ import clz_Torappu_Undefinable_1_System_String_
            obj = clz_Torappu_Undefinable_1_System_String_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def Attributes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_EnemyDatabase_AttributesData import clz_Torappu_EnemyDatabase_AttributesData
            obj = clz_Torappu_EnemyDatabase_AttributesData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def ApplyWay(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_ import clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_
            obj = clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def Motion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_Torappu_MotionMode_ import clz_Torappu_Undefinable_1_Torappu_MotionMode_
            obj = clz_Torappu_Undefinable_1_Torappu_MotionMode_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def EnemyTags(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_String___ import clz_Torappu_Undefinable_1_System_String___
            obj = clz_Torappu_Undefinable_1_System_String___()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def LifePointReduce(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_Int32_ import clz_Torappu_Undefinable_1_System_Int32_
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def LevelType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_ import clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_
            obj = clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def RangeRadius(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_Single_ import clz_Torappu_Undefinable_1_System_Single_
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def NumOfExtraDrops(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_Int32_ import clz_Torappu_Undefinable_1_System_Int32_
            obj = clz_Torappu_Undefinable_1_System_Int32_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def ViewRadius(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_Single_ import clz_Torappu_Undefinable_1_System_Single_
            obj = clz_Torappu_Undefinable_1_System_Single_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def NotCountInTotal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_Undefinable_1_System_Boolean_ import clz_Torappu_Undefinable_1_System_Boolean_
            obj = clz_Torappu_Undefinable_1_System_Boolean_()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def TalentBlackboard(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from clz_Torappu_Blackboard_DataPair import clz_Torappu_Blackboard_DataPair
            obj = clz_Torappu_Blackboard_DataPair()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def TalentBlackboardLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_EnemyDatabase_EnemyData
    def TalentBlackboardIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        return o == 0

    # clz_Torappu_EnemyDatabase_EnemyData
    def Skills(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from clz_Torappu_LevelData_EnemyData_ESkillData import clz_Torappu_LevelData_EnemyData_ESkillData
            obj = clz_Torappu_LevelData_EnemyData_ESkillData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # clz_Torappu_EnemyDatabase_EnemyData
    def SkillsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # clz_Torappu_EnemyDatabase_EnemyData
    def SkillsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        return o == 0

    # clz_Torappu_EnemyDatabase_EnemyData
    def SpData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from clz_Torappu_LevelData_EnemyData_ESpData import clz_Torappu_LevelData_EnemyData_ESpData
            obj = clz_Torappu_LevelData_EnemyData_ESpData()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def clz_Torappu_EnemyDatabase_EnemyDataStart(builder):
    builder.StartObject(16)

def Start(builder):
    clz_Torappu_EnemyDatabase_EnemyDataStart(builder)

def clz_Torappu_EnemyDatabase_EnemyDataAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    clz_Torappu_EnemyDatabase_EnemyDataAddName(builder, name)

def clz_Torappu_EnemyDatabase_EnemyDataAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def AddDescription(builder, description):
    clz_Torappu_EnemyDatabase_EnemyDataAddDescription(builder, description)

def clz_Torappu_EnemyDatabase_EnemyDataAddPrefabKey(builder, prefabKey):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(prefabKey), 0)

def AddPrefabKey(builder, prefabKey):
    clz_Torappu_EnemyDatabase_EnemyDataAddPrefabKey(builder, prefabKey)

def clz_Torappu_EnemyDatabase_EnemyDataAddAttributes(builder, attributes):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(attributes), 0)

def AddAttributes(builder, attributes):
    clz_Torappu_EnemyDatabase_EnemyDataAddAttributes(builder, attributes)

def clz_Torappu_EnemyDatabase_EnemyDataAddApplyWay(builder, applyWay):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(applyWay), 0)

def AddApplyWay(builder, applyWay):
    clz_Torappu_EnemyDatabase_EnemyDataAddApplyWay(builder, applyWay)

def clz_Torappu_EnemyDatabase_EnemyDataAddMotion(builder, motion):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(motion), 0)

def AddMotion(builder, motion):
    clz_Torappu_EnemyDatabase_EnemyDataAddMotion(builder, motion)

def clz_Torappu_EnemyDatabase_EnemyDataAddEnemyTags(builder, enemyTags):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(enemyTags), 0)

def AddEnemyTags(builder, enemyTags):
    clz_Torappu_EnemyDatabase_EnemyDataAddEnemyTags(builder, enemyTags)

def clz_Torappu_EnemyDatabase_EnemyDataAddLifePointReduce(builder, lifePointReduce):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(lifePointReduce), 0)

def AddLifePointReduce(builder, lifePointReduce):
    clz_Torappu_EnemyDatabase_EnemyDataAddLifePointReduce(builder, lifePointReduce)

def clz_Torappu_EnemyDatabase_EnemyDataAddLevelType(builder, levelType):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(levelType), 0)

def AddLevelType(builder, levelType):
    clz_Torappu_EnemyDatabase_EnemyDataAddLevelType(builder, levelType)

def clz_Torappu_EnemyDatabase_EnemyDataAddRangeRadius(builder, rangeRadius):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(rangeRadius), 0)

def AddRangeRadius(builder, rangeRadius):
    clz_Torappu_EnemyDatabase_EnemyDataAddRangeRadius(builder, rangeRadius)

def clz_Torappu_EnemyDatabase_EnemyDataAddNumOfExtraDrops(builder, numOfExtraDrops):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(numOfExtraDrops), 0)

def AddNumOfExtraDrops(builder, numOfExtraDrops):
    clz_Torappu_EnemyDatabase_EnemyDataAddNumOfExtraDrops(builder, numOfExtraDrops)

def clz_Torappu_EnemyDatabase_EnemyDataAddViewRadius(builder, viewRadius):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(viewRadius), 0)

def AddViewRadius(builder, viewRadius):
    clz_Torappu_EnemyDatabase_EnemyDataAddViewRadius(builder, viewRadius)

def clz_Torappu_EnemyDatabase_EnemyDataAddNotCountInTotal(builder, notCountInTotal):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(notCountInTotal), 0)

def AddNotCountInTotal(builder, notCountInTotal):
    clz_Torappu_EnemyDatabase_EnemyDataAddNotCountInTotal(builder, notCountInTotal)

def clz_Torappu_EnemyDatabase_EnemyDataAddTalentBlackboard(builder, talentBlackboard):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(talentBlackboard), 0)

def AddTalentBlackboard(builder, talentBlackboard):
    clz_Torappu_EnemyDatabase_EnemyDataAddTalentBlackboard(builder, talentBlackboard)

def clz_Torappu_EnemyDatabase_EnemyDataStartTalentBlackboardVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartTalentBlackboardVector(builder, numElems):
    return clz_Torappu_EnemyDatabase_EnemyDataStartTalentBlackboardVector(builder, numElems)

def clz_Torappu_EnemyDatabase_EnemyDataAddSkills(builder, skills):
    builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(skills), 0)

def AddSkills(builder, skills):
    clz_Torappu_EnemyDatabase_EnemyDataAddSkills(builder, skills)

def clz_Torappu_EnemyDatabase_EnemyDataStartSkillsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSkillsVector(builder, numElems):
    return clz_Torappu_EnemyDatabase_EnemyDataStartSkillsVector(builder, numElems)

def clz_Torappu_EnemyDatabase_EnemyDataAddSpData(builder, spData):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(spData), 0)

def AddSpData(builder, spData):
    clz_Torappu_EnemyDatabase_EnemyDataAddSpData(builder, spData)

def clz_Torappu_EnemyDatabase_EnemyDataEnd(builder):
    return builder.EndObject()

def End(builder):
    return clz_Torappu_EnemyDatabase_EnemyDataEnd(builder)

import clz_Torappu_Blackboard_DataPair
import clz_Torappu_EnemyDatabase_AttributesData
import clz_Torappu_LevelData_EnemyData_ESkillData
import clz_Torappu_LevelData_EnemyData_ESpData
import clz_Torappu_Undefinable_1_System_Boolean_
import clz_Torappu_Undefinable_1_System_Int32_
import clz_Torappu_Undefinable_1_System_Single_
import clz_Torappu_Undefinable_1_System_String_
import clz_Torappu_Undefinable_1_System_String___
import clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_
import clz_Torappu_Undefinable_1_Torappu_MotionMode_
import clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_
try:
    from typing import List, Optional
except:
    pass

class clz_Torappu_EnemyDatabase_EnemyDataT(object):

    # clz_Torappu_EnemyDatabase_EnemyDataT
    def __init__(self):
        self.name = None  # type: Optional[clz_Torappu_Undefinable_1_System_String_.clz_Torappu_Undefinable_1_System_String_T]
        self.description = None  # type: Optional[clz_Torappu_Undefinable_1_System_String_.clz_Torappu_Undefinable_1_System_String_T]
        self.prefabKey = None  # type: Optional[clz_Torappu_Undefinable_1_System_String_.clz_Torappu_Undefinable_1_System_String_T]
        self.attributes = None  # type: Optional[clz_Torappu_EnemyDatabase_AttributesData.clz_Torappu_EnemyDatabase_AttributesDataT]
        self.applyWay = None  # type: Optional[clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_.clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_T]
        self.motion = None  # type: Optional[clz_Torappu_Undefinable_1_Torappu_MotionMode_.clz_Torappu_Undefinable_1_Torappu_MotionMode_T]
        self.enemyTags = None  # type: Optional[clz_Torappu_Undefinable_1_System_String___.clz_Torappu_Undefinable_1_System_String___T]
        self.lifePointReduce = None  # type: Optional[clz_Torappu_Undefinable_1_System_Int32_.clz_Torappu_Undefinable_1_System_Int32_T]
        self.levelType = None  # type: Optional[clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_.clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_T]
        self.rangeRadius = None  # type: Optional[clz_Torappu_Undefinable_1_System_Single_.clz_Torappu_Undefinable_1_System_Single_T]
        self.numOfExtraDrops = None  # type: Optional[clz_Torappu_Undefinable_1_System_Int32_.clz_Torappu_Undefinable_1_System_Int32_T]
        self.viewRadius = None  # type: Optional[clz_Torappu_Undefinable_1_System_Single_.clz_Torappu_Undefinable_1_System_Single_T]
        self.notCountInTotal = None  # type: Optional[clz_Torappu_Undefinable_1_System_Boolean_.clz_Torappu_Undefinable_1_System_Boolean_T]
        self.talentBlackboard = None  # type: List[clz_Torappu_Blackboard_DataPair.clz_Torappu_Blackboard_DataPairT]
        self.skills = None  # type: List[clz_Torappu_LevelData_EnemyData_ESkillData.clz_Torappu_LevelData_EnemyData_ESkillDataT]
        self.spData = None  # type: Optional[clz_Torappu_LevelData_EnemyData_ESpData.clz_Torappu_LevelData_EnemyData_ESpDataT]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        clzTorappuEnemyDatabaseEnemyData = clz_Torappu_EnemyDatabase_EnemyData()
        clzTorappuEnemyDatabaseEnemyData.Init(buf, pos)
        return cls.InitFromObj(clzTorappuEnemyDatabaseEnemyData)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, clzTorappuEnemyDatabaseEnemyData):
        x = clz_Torappu_EnemyDatabase_EnemyDataT()
        x._UnPack(clzTorappuEnemyDatabaseEnemyData)
        return x

    # clz_Torappu_EnemyDatabase_EnemyDataT
    def _UnPack(self, clzTorappuEnemyDatabaseEnemyData):
        if clzTorappuEnemyDatabaseEnemyData is None:
            return
        if clzTorappuEnemyDatabaseEnemyData.Name() is not None:
            self.name = clz_Torappu_Undefinable_1_System_String_.clz_Torappu_Undefinable_1_System_String_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.Name())
        if clzTorappuEnemyDatabaseEnemyData.Description() is not None:
            self.description = clz_Torappu_Undefinable_1_System_String_.clz_Torappu_Undefinable_1_System_String_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.Description())
        if clzTorappuEnemyDatabaseEnemyData.PrefabKey() is not None:
            self.prefabKey = clz_Torappu_Undefinable_1_System_String_.clz_Torappu_Undefinable_1_System_String_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.PrefabKey())
        if clzTorappuEnemyDatabaseEnemyData.Attributes() is not None:
            self.attributes = clz_Torappu_EnemyDatabase_AttributesData.clz_Torappu_EnemyDatabase_AttributesDataT.InitFromObj(clzTorappuEnemyDatabaseEnemyData.Attributes())
        if clzTorappuEnemyDatabaseEnemyData.ApplyWay() is not None:
            self.applyWay = clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_.clz_Torappu_Undefinable_1_Torappu_SourceApplyWay_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.ApplyWay())
        if clzTorappuEnemyDatabaseEnemyData.Motion() is not None:
            self.motion = clz_Torappu_Undefinable_1_Torappu_MotionMode_.clz_Torappu_Undefinable_1_Torappu_MotionMode_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.Motion())
        if clzTorappuEnemyDatabaseEnemyData.EnemyTags() is not None:
            self.enemyTags = clz_Torappu_Undefinable_1_System_String___.clz_Torappu_Undefinable_1_System_String___T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.EnemyTags())
        if clzTorappuEnemyDatabaseEnemyData.LifePointReduce() is not None:
            self.lifePointReduce = clz_Torappu_Undefinable_1_System_Int32_.clz_Torappu_Undefinable_1_System_Int32_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.LifePointReduce())
        if clzTorappuEnemyDatabaseEnemyData.LevelType() is not None:
            self.levelType = clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_.clz_Torappu_Undefinable_1_Torappu_EnemyLevelType_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.LevelType())
        if clzTorappuEnemyDatabaseEnemyData.RangeRadius() is not None:
            self.rangeRadius = clz_Torappu_Undefinable_1_System_Single_.clz_Torappu_Undefinable_1_System_Single_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.RangeRadius())
        if clzTorappuEnemyDatabaseEnemyData.NumOfExtraDrops() is not None:
            self.numOfExtraDrops = clz_Torappu_Undefinable_1_System_Int32_.clz_Torappu_Undefinable_1_System_Int32_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.NumOfExtraDrops())
        if clzTorappuEnemyDatabaseEnemyData.ViewRadius() is not None:
            self.viewRadius = clz_Torappu_Undefinable_1_System_Single_.clz_Torappu_Undefinable_1_System_Single_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.ViewRadius())
        if clzTorappuEnemyDatabaseEnemyData.NotCountInTotal() is not None:
            self.notCountInTotal = clz_Torappu_Undefinable_1_System_Boolean_.clz_Torappu_Undefinable_1_System_Boolean_T.InitFromObj(clzTorappuEnemyDatabaseEnemyData.NotCountInTotal())
        if not clzTorappuEnemyDatabaseEnemyData.TalentBlackboardIsNone():
            self.talentBlackboard = []
            for i in range(clzTorappuEnemyDatabaseEnemyData.TalentBlackboardLength()):
                if clzTorappuEnemyDatabaseEnemyData.TalentBlackboard(i) is None:
                    self.talentBlackboard.append(None)
                else:
                    clz_Torappu_Blackboard_DataPair_ = clz_Torappu_Blackboard_DataPair.clz_Torappu_Blackboard_DataPairT.InitFromObj(clzTorappuEnemyDatabaseEnemyData.TalentBlackboard(i))
                    self.talentBlackboard.append(clz_Torappu_Blackboard_DataPair_)
        if not clzTorappuEnemyDatabaseEnemyData.SkillsIsNone():
            self.skills = []
            for i in range(clzTorappuEnemyDatabaseEnemyData.SkillsLength()):
                if clzTorappuEnemyDatabaseEnemyData.Skills(i) is None:
                    self.skills.append(None)
                else:
                    clz_Torappu_LevelData_EnemyData_ESkillData_ = clz_Torappu_LevelData_EnemyData_ESkillData.clz_Torappu_LevelData_EnemyData_ESkillDataT.InitFromObj(clzTorappuEnemyDatabaseEnemyData.Skills(i))
                    self.skills.append(clz_Torappu_LevelData_EnemyData_ESkillData_)
        if clzTorappuEnemyDatabaseEnemyData.SpData() is not None:
            self.spData = clz_Torappu_LevelData_EnemyData_ESpData.clz_Torappu_LevelData_EnemyData_ESpDataT.InitFromObj(clzTorappuEnemyDatabaseEnemyData.SpData())

    # clz_Torappu_EnemyDatabase_EnemyDataT
    def Pack(self, builder):
        if self.name is not None:
            name = self.name.Pack(builder)
        if self.description is not None:
            description = self.description.Pack(builder)
        if self.prefabKey is not None:
            prefabKey = self.prefabKey.Pack(builder)
        if self.attributes is not None:
            attributes = self.attributes.Pack(builder)
        if self.applyWay is not None:
            applyWay = self.applyWay.Pack(builder)
        if self.motion is not None:
            motion = self.motion.Pack(builder)
        if self.enemyTags is not None:
            enemyTags = self.enemyTags.Pack(builder)
        if self.lifePointReduce is not None:
            lifePointReduce = self.lifePointReduce.Pack(builder)
        if self.levelType is not None:
            levelType = self.levelType.Pack(builder)
        if self.rangeRadius is not None:
            rangeRadius = self.rangeRadius.Pack(builder)
        if self.numOfExtraDrops is not None:
            numOfExtraDrops = self.numOfExtraDrops.Pack(builder)
        if self.viewRadius is not None:
            viewRadius = self.viewRadius.Pack(builder)
        if self.notCountInTotal is not None:
            notCountInTotal = self.notCountInTotal.Pack(builder)
        if self.talentBlackboard is not None:
            talentBlackboardlist = []
            for i in range(len(self.talentBlackboard)):
                talentBlackboardlist.append(self.talentBlackboard[i].Pack(builder))
            clz_Torappu_EnemyDatabase_EnemyDataStartTalentBlackboardVector(builder, len(self.talentBlackboard))
            for i in reversed(range(len(self.talentBlackboard))):
                builder.PrependUOffsetTRelative(talentBlackboardlist[i])
            talentBlackboard = builder.EndVector()
        if self.skills is not None:
            skillslist = []
            for i in range(len(self.skills)):
                skillslist.append(self.skills[i].Pack(builder))
            clz_Torappu_EnemyDatabase_EnemyDataStartSkillsVector(builder, len(self.skills))
            for i in reversed(range(len(self.skills))):
                builder.PrependUOffsetTRelative(skillslist[i])
            skills = builder.EndVector()
        if self.spData is not None:
            spData = self.spData.Pack(builder)
        clz_Torappu_EnemyDatabase_EnemyDataStart(builder)
        if self.name is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddName(builder, name)
        if self.description is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddDescription(builder, description)
        if self.prefabKey is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddPrefabKey(builder, prefabKey)
        if self.attributes is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddAttributes(builder, attributes)
        if self.applyWay is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddApplyWay(builder, applyWay)
        if self.motion is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddMotion(builder, motion)
        if self.enemyTags is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddEnemyTags(builder, enemyTags)
        if self.lifePointReduce is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddLifePointReduce(builder, lifePointReduce)
        if self.levelType is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddLevelType(builder, levelType)
        if self.rangeRadius is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddRangeRadius(builder, rangeRadius)
        if self.numOfExtraDrops is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddNumOfExtraDrops(builder, numOfExtraDrops)
        if self.viewRadius is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddViewRadius(builder, viewRadius)
        if self.notCountInTotal is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddNotCountInTotal(builder, notCountInTotal)
        if self.talentBlackboard is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddTalentBlackboard(builder, talentBlackboard)
        if self.skills is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddSkills(builder, skills)
        if self.spData is not None:
            clz_Torappu_EnemyDatabase_EnemyDataAddSpData(builder, spData)
        clzTorappuEnemyDatabaseEnemyData = clz_Torappu_EnemyDatabase_EnemyDataEnd(builder)
        return clzTorappuEnemyDatabaseEnemyData
